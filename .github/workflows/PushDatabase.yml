name: Push Database To Dockerhub

on:
  push:
    branches:
      - main
    paths:
      - 'db/**'
      - '!db/Dockerfile.local'
      - '.github/workflows/PushDatabase.yml'
  workflow_dispatch:

jobs:
  build-and-push:
    timeout-minutes: 60
    runs-on: ubuntu-22.04
    env:
      DOCKERHUB_USERNAME: datagnomesteam
      MAIN_REPO_NAME: datagnomesteam/project_database
      DOCKERFILE_PATH: ${{ github.workspace }}/db
      DOCKER_BUILDKIT: 1
      ACTIONS_STEP_DEBUG: true
      ACTIONS_RUNNER_DEBUG: true
      CLEAN_OLD_TAGS: false

    steps:
      - name: Check the initial disk space
        run: df -h

      - name: Maximize build space
        run: |
          echo "Removing large packages to maximize disk space..."
          sudo rm -rf /usr/share/dotnet /opt/ghc /usr/local/lib/android /usr/lib/jvm || true
          sudo rm -rf /usr/local/share/boost /usr/share/swift /usr/local/.ghcup || true
          sudo docker image prune --all --force || true
          sudo apt-get purge -y '^ghc-.*' '^dotnet-.*' '^aspnetcore-.*' '^mysql-.*' '^php.*' azure-cli google-cloud-cli hhvm google-chrome-stable firefox powershell mono-devel libgl1-mesa-dri || true
          sudo apt-get autoremove -y || true
          sudo apt-get clean || true
          echo "Disk space after cleanup:"
          df -h

      - name: Install essential packages
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            ca-certificates \
            curl \
            gnupg \
            lsb-release \
            jq \
            gzip \
            tar \
            qemu-user-static \
            aria2

      - name: Install Docker
        run: |
          sudo mkdir -p /etc/apt/keyrings
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
          echo \
            "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
            $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends docker-ce docker-ce-cli containerd.io docker-compose-plugin

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download dataset
        working-directory: ${{ github.workspace }}
        run: |
          aria2c -x16 -s16 -k10M --file-allocation=falloc --max-connection-per-server=16 --min-split-size=10M --max-concurrent-downloads=1 --optimize-concurrent-downloads=true --max-tries=50 --retry-wait=5 --allow-overwrite=true --auto-file-renaming=false "${{ secrets.DATASET_URL_SLIM }}" -o db/pg.zst

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: |
            network=host
            image=moby/buildkit:master
            memory=6g

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Clean up old Docker images on Docker Hub
        if: ${{ env.CLEAN_OLD_TAGS == 'true' }}
        run: |
          echo "Attempting to remove 'latest' tag from Docker Hub..."
          TOKEN=${{ secrets.DOCKERHUB_TOKEN }}
          DELETE_STATUS_CODE=$(curl -s -o /dev/null -w "%{http_code}" -X DELETE -H "Authorization: Bearer ${TOKEN}" "https://hub.docker.com/v2/repositories/${{ env.MAIN_REPO_NAME }}/tags/latest/")
          echo "Delete request for 'latest' tag sent. Status code: $DELETE_STATUS_CODE"
          if [ "$DELETE_STATUS_CODE" -ne 204 ] && [ "$DELETE_STATUS_CODE" -ne 404 ]; then
            echo "Warning: Failed to delete 'latest' tag (Status: $DELETE_STATUS_CODE). It might not exist or there was an error."
          fi

      - name: Build and push multi-arch image
        uses: docker/build-push-action@v6
        with:
          context: ${{ env.DOCKERFILE_PATH }}
          file: ${{ env.DOCKERFILE_PATH }}/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ env.MAIN_REPO_NAME }}:latest
          provenance: false

      - name: Update repo description
        uses: peter-evans/dockerhub-description@v4
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          repository: ${{ env.MAIN_REPO_NAME }}
          readme-filepath: ./README.md

      - name: Cleanups
        if: always()
        run: |
          sudo docker system prune -af --volumes || true
          sudo docker builder prune -af || true
          sudo docker image prune -af || true
          echo "Final disk space:"
          df -h

      - name: README!
        run: |
          echo "Find the latest image at: https://hub.docker.com/r/datagnomesteam/project_database"

      - name: Send Discord alert on failure
        if: failure()
        run: |
          SHORT_SHA=$(echo "${{ github.sha }}" | cut -c1-7)
          curl -X POST "${{ secrets.DISCORD_WEBHOOK }}" \
            -H "Content-Type: application/json" \
            -d '{
              "username": "GitHub Actions",
              "avatar_url": "https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png",
              "content": "**ðŸš¨ GitHub Action Failed!**\n\nWorkflow Name: `${{ github.workflow }}`\nCommit: `'"$SHORT_SHA"'`\n[View Run](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})"
            }'